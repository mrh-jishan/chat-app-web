{"version":3,"sources":["components/Topic.js","constant/index.js","pages/Message.js","pages/Chat.js","pages/Home.js","pages/Register.js","App.js","reportWebVitals.js","index.js"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","Topic","form","isModalVisible","handleOk","handleCancel","title","centered","visible","onOk","onCancel","footer","onFinish","align","justify","Item","label","name","rules","required","message","type","htmlType","API_HOST","process","TextArea","Input","Message","slug","useParams","Form","useForm","useState","messages","setMessages","useEffect","actionCable","createConsumer","subscriptions","create","channel","chatroom_slug","connected","console","log","disconnected","received","data","prevArray","axios","get","then","res","catch","err","response","className","header","length","itemLayout","dataSource","renderItem","item","actions","author","user","username","avatar","content","datetime","created_at","values","post","resetFields","rows","Header","Layout","Content","Chat","history","useRouteMatch","path","url","rooms","setRooms","setIsModalVisible","style","padding","marginTop","minHeight","Title","gutter","onClick","topic","chatroom","prev","notification","info","description","placement","error","map","room","index","to","exact","component","Home","initialValues","password","push","Password","Paragraph","Register","first_name","last_name","App","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ca36533.chunk.js","sourcesContent":["import { Button, Col, Form, Input, Modal, Row } from 'antd';\nimport React from 'react';\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Topic = ({ form, isModalVisible, handleOk, handleCancel }) => {\n\n    return (\n        <>\n            <Modal title=\"Create Chat Topic\"\n                centered\n                visible={isModalVisible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                footer={null}>\n                <Form\n                    {...layout}\n                    form={form}\n                    onFinish={handleOk}\n                >\n                    <Row align='middle'\n                        justify='center'>\n                        <Col span={16}>\n                            <Form.Item\n                                label=\"Topic Name\"\n                                name=\"topic\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your topic name!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item {...tailLayout}>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Submit\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal>\n        </>\n    )\n}\n\nexport default Topic;","export const API_HOST = process.env.REACT_APP_API_HOST || 'http://localhost:4000'\n\nexport const WS_HOST = process.env.REACT_APP_WS_HOST || 'ws://localhost:4000/cable'","import actionCable from 'actioncable';\nimport { Button, Comment, Form, Input, List } from 'antd';\nimport axios from 'axios';\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { API_HOST, WS_HOST } from '../constant';\n\nconst { TextArea } = Input;\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Message = () => {\n    const { slug } = useParams();\n    const [form] = Form.useForm();\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        const cable = actionCable.createConsumer(WS_HOST);\n        cable.subscriptions.create({\n            channel: `MessagesChannel`,\n            chatroom_slug: `messages_${slug}`\n        }, {\n            connected: () => {\n                console.log(\"connected!\")\n            },\n            disconnected: () => {\n                console.log('disconnected');\n            },\n            received: data => {\n                console.log('socket data----------------', data);\n                setMessages(prevArray => [...prevArray, data.message])\n            }\n        })\n    }, [slug])\n\n    useEffect(() => {\n        axios.get(`${API_HOST}/chatrooms/${slug}/messages`)\n            .then(res => {\n                const { data } = res.data;\n                console.log('messages-------, ', data);\n                setMessages(data.messages)\n            }).catch(err => {\n                console.log('err: ', err.response);\n            })\n    }, [slug])\n\n    const onFinish = (values) => {\n        console.log('Success:', values);\n        axios.post(`${API_HOST}/chatrooms/${slug}/messages`, {\n            \"message\": {\n                \"content\": values.content,\n                \"user_id\": 2\n            }\n        })\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n                form.resetFields();\n            }).catch(err => {\n                console.log('err: ', err.response);\n            })\n    };\n\n\n    return (\n        <div>\n            <h3>Chat Room: {slug}</h3>\n            <List\n                className=\"comment-list\"\n                header={`${messages.length} replies`}\n                itemLayout=\"horizontal\"\n                dataSource={messages}\n                renderItem={item => (\n                    <li>\n                        <Comment\n                            actions={item.actions}\n                            author={item.user.username}\n                            avatar='https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'\n                            content={item.content}\n                            datetime={item.created_at}\n                        />\n                    </li>\n                )}\n            />\n\n            <Form\n                {...layout}\n                name=\"basic\"\n                onFinish={onFinish}\n                form={form}\n            >\n                <Form.Item\n                    name=\"content\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your message!',\n                        },\n                    ]}\n                >\n                    <TextArea rows={4} />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\"> Submit </Button>\n                </Form.Item>\n            </Form>\n        </div >\n    );\n}\n\nexport default Message;","import { Button, Card, Col, Form, Layout, notification, Row, Typography } from 'antd';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport Topic from '../components/Topic';\nimport { API_HOST } from '../constant';\nimport Message from './Message';\n\nconst { Header, Content } = Layout;\n\nconst Chat = ({ history }) => {\n\n    const { path, url } = useRouteMatch();\n    const [rooms, setRooms] = useState([]);\n    const [form] = Form.useForm();\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    useEffect(() => {\n        axios.get(`${API_HOST}/chatrooms`)\n            .then(res => {\n                const { data } = res.data;\n                setRooms(data.rooms)\n            }).catch(err => {\n                console.log('err: ', err.response);\n            })\n    }, [])\n\n    const handleOk = (topic) => {\n        axios.post(`${API_HOST}/chatrooms`, { chatroom: topic })\n            .then(res => {\n                setRooms(prev => [...prev, res.data.data.chatroom])\n                setIsModalVisible(false);\n                form.resetFields();\n                notification.info({\n                    description: 'Success!',\n                    placement: 'bottomRight',\n                });\n            }).catch(err => {\n                notification.error({\n                    message: err.response.data.message,\n                    placement: 'bottomRight'\n                })\n            })\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    return (\n        <>\n            <Layout>\n                <Header>\n                    <div className=\"logo\" />\n                </Header>\n                <Content style={{ padding: '0 50px', marginTop: 64 }}>\n                    <Row align='middle' justify='center' style={{ minHeight: '300px' }}>\n                        <Col span={24}>\n                            <Typography.Title>Welcome to Chat App</Typography.Title>\n                            <Row\n                                gutter={[16, 16]}\n                                align='middle'\n                                justify='center'>\n\n                                <Col span={24}>\n                                    <h2>Chat Topic</h2>\n                                    <Button type=\"primary\" onClick={showModal}>\n                                        Create Topic\n                                    </Button>\n                                    <Topic\n                                        form={form}\n                                        isModalVisible={isModalVisible}\n                                        handleOk={handleOk}\n                                        handleCancel={handleCancel} />\n                                </Col>\n                                <Col span={10}>\n                                    <Card>\n                                        <ul>\n                                            {rooms.length <= 0 && (\n                                                <h3> No topic found </h3>\n                                            )}\n                                            {rooms.map((room, index) => (\n                                                <li key={index}>\n                                                    <Link to={`${url}/${room.slug}`}>{room.topic}</Link>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </Card>\n                                </Col>\n\n                                <Col span={14}>\n                                    <Card>\n                                        <Switch>\n                                            <Route exact path={path} component={() => <h3>Please select a chat topic.</h3>} />\n                                            <Route path={`${path}/:slug`} component={Message} />\n                                        </Switch>\n                                    </Card>\n                                </Col>\n                            </Row>,\n                        </Col>\n                    </Row>\n                </Content>\n            </Layout>\n            <Link to=\"/\">Go Back</Link>\n        </>\n    )\n}\n\nexport default Chat;","import { Button, Col, Form, Input, Layout, Row, Typography } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { API_HOST } from '../constant';\n\nconst { Header, Content } = Layout;\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\n\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Home = ({ history }) => {\n\n    const onFinish = (user) => {\n        axios.post(`${API_HOST}/login`, { user })\n            .then(res => {\n                history.push(\"/chat\");\n            }).catch(err => {\n                console.log('err: ', err.response);\n            })\n    };\n\n    return (\n        <>\n            <Layout>\n                <Header>\n                    <div className=\"logo\" />\n                </Header>\n                <Content style={{ padding: '0 50px', marginTop: 64 }}>\n                    <Row align='middle'\n                        justify='center'\n                        style={{ minHeight: '300px' }}>\n                        <Col span={10}>\n                            <Typography.Title>Welcome to Chat App</Typography.Title>\n                            <Form\n                                {...layout}\n                                name=\"login-form\"\n                                initialValues={{\n                                    username: 'test',\n                                    password: 'test'\n                                }}\n                                onFinish={onFinish}\n                            >\n                                <Form.Item\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your username!',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your password!',\n                                        },\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n\n                                <Form.Item {...tailLayout}>\n                                    <Typography.Paragraph>\n                                        Don't you have an account?   <Link to=\"/register\"> Register here</Link>\n                                    </Typography.Paragraph>\n                                </Form.Item>\n\n                                <Form.Item {...tailLayout}>\n                                    <Button type=\"primary\" htmlType=\"submit\">Login</Button>\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Content>\n            </Layout>\n        </>\n    )\n}\n\nexport default Home;","import { Button, Col, Form, Input, Layout, Row, Typography } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { API_HOST } from '../constant';\n\nconst { Header, Content } = Layout;\n\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Register = () => {\n\n    const onFinish = (user) => {\n        console.log('Success:', user);\n\n        axios.post(`${API_HOST}/signup`, { user })\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            }).catch(err => {\n                console.log('err: ', err.response);\n            })\n    };\n\n    return (\n        <>\n            <Layout>\n                <Header>\n                    <div className=\"logo\" />\n                </Header>\n                <Content style={{ padding: '0 50px', marginTop: 64 }}>\n                    <Row align='middle'\n                        justify='center'\n                        style={{ minHeight: '300px' }}>\n                        <Col span={18}>\n                            <Typography.Title>Welcome to Chat App</Typography.Title>\n                            <Form\n                                {...layout}\n                                name=\"basic\"\n                                initialValues={{\n                                    username: 'test',\n                                    password: 'test',\n                                    first_name: 'hi',\n                                    last_name: 'there'\n                                }}\n                                onFinish={onFinish}\n                            >\n                                <Form.Item\n                                    label=\"First Name\"\n                                    name=\"first_name\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your first name!',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Last Name\"\n                                    name=\"last_name\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your last name!',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your username!',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your password!',\n                                        },\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n\n                                <Form.Item {...tailLayout}>\n                                    <Typography.Paragraph>\n                                        Already have an account?   <Link to=\"/\"> Login here</Link>\n                                    </Typography.Paragraph>\n                                </Form.Item>\n\n                                <Form.Item {...tailLayout}>\n                                    <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Content>\n            </Layout>\n        </>\n    )\n}\n\nexport default Register;","import { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Chat from \"./pages/Chat\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/login\" component={Home} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route path=\"/chat\" component={Chat} />\n        <Redirect to='/login' from='/' />\n        <Route path='*' exact={true} component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'antd/dist/antd.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}